Installing Redis in Ubuntu
    https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-redis-on-ubuntu-18-04
    Installing and Configuring Redis
        sudo apt update
        sudo apt install redis-server
        sudo vi /etc/redis/redis.conf
            supervised systemd
        sudo systemctl restart redis.service
    Testing Redis
        sudo systemctl status redis
        redis-cli
        127.0.0.1:6379> ping
        set test "It's working!"
    exit 
        to back ubuntu user 
    
    ====================================================================

                Introduction to Keys in Redis

Working with Keys in Redis
    sudo systemctl status redis
    redis-cli
    set 1 "hello"
    get 1
    del 1
    set 1 "hello"
    set 2 "name"
    del 1 2
    To check key exist or not: exists
        exists 1
    Check multi key 
        EXISTS 1 2 name
    Using expire, can expire a key within with some period of time
        set a "hello" EX 10
            EX by second 
        ttl a
            check a key expire
            ttl is time to live command, we can get how many seconds are left for key
            If key is dead or key is removed then we will get minus 2
            If key exist but there is no expiration on that key then we will get minus 1
        set 1 "hello"
        then we can set expiration for 1 key by command
        Expire 1 20
        Expire a key in milli seconds
            set 1 "hello" PX 100
        Check time in milli seconds
            pttl 1
        Set time for exist key in milli second
            set 1 "hello"
            pexpire 1 100000
Pattern Matching with Keys
    set hello 1
    get hello
    set hallo 2
    set hrllo 2
    set heello 2
    set hijllo 2
    keys h?llo
        1) "hallo"
        2) "hrllo"
        3) "hello
    keys h*llo
        1) "hallo"
        2) "heello"
        3) "hrllo"
        4) "hijllo"
        5) "hello"
    keys h[ae]llo
    keys h[^e]llo
    keys h[e-r]llo
    keys *ll*
    keys h????
Understanding Shutdown Command
    Setting some keys, and then shutdown affect those keys
    set 1 hello
    set 2 bye 
    shutdown save 
    shutdown nosave
Some more commands
    RANDOMKEY: Get any key from database
    keys *: show all keys we have 
    rename: change key name 
        RENAME 1 4
    If rename to new key but that new key is existing, it will replace existing key and existing will no longer 
    Can only rename key only when our key does not exist.
        set name "bob"
        set lname "rob"
        renamenx name lname
        renamenx name fname
        unlink: Very similar to del command. unlink command remove our key asynchronously, It does remove key by blocking 
            the current thread, it performs its job in another thread.
            It is very useful sometimes when we want to delete large number of keys, at that time if using del command, it will
            eat our performance and can slow our Redis database
    type: check what type of value is stored in key
        type lname
Dump & Restore in Redis
    dump: Use to take backup of our data stored in key, accidentally our data is deleted we can store that data
        set name "Bob"
        dump name
        del name
        restore name 0 "\x00\x03Bob\b\x00\x12\x8a\xfbJ\xdf/\xc4\t"
    If restore key while target key name already exist, we can use "replace" option
        restore name 0 "\x00\x03Bob\b\x00\x12\x8a\xfbJ\xdf/\xc4\t" replace
    Restore "name" key of value as new name is "fname"
        set fname "abc"
        restore fname 0 "\x00\x03Bob\b\x00\x12\x8a\xfbJ\xdf/\xc4\t" replace
        get fname
            -> "Bob"
    
    ====================================================================

                Strings in  Redis
    
Getting Started with Strings
    set 1 abc
    type: check type value of key 
        type 1 -> string
    set 2 "hello"
    type 2
        -> will also be string
    nx option: Using nx option we only set the key if it does not already exist, it means that we 
        can not create a key if it is already existing in Redis database
        set 1 hello nx
            Because 1 key is existing so we can not set
    xx option: Only set the key if it already exists, it just opposite of nx option
        set 5 hello xx
            The key 5 is not yet created in Redis database, so we can not set
        set 1 hello xx
            Can set, key 1 will have value is "hello"
    append: Using append command to append a value to string
        set greeting Hello
        append greeting World
    incr: Using to increment a value. In Redis we can perform some operations on string type, in many of database it is imposible
        set score 1
        incr score
        get score -> its value will become "2"
    incrby: We can specify which number we want to increment our value
        incrby score 5
            -> score will have value is 7
    decr: Decrement value by 1
        decr score
        -> score will have value is 6
    decrby: We can specify which number we want to Decrement our value
        decrby score 5
            -> score will have value is 1
    incrbyfloat: We can store float value also in we string and also perform some operations
        set num 1.0 (type is string)
        incrbyfloat num 1.0
            -> num will have value is 2
    